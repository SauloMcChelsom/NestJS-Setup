######################## OBSERVAÇÕES #########################
##############################################################
####  OS COMANDOS IRAM FUNCIONAR SOMENTE SE ENTRA NA      ####
####  PASTA DO PROJETO.                                   ####
####                                                      ####
####                                                      ####
####                                                      ####
####                                                      ####
####                                                      ####
####                                                      ####
####                                                      ####
####                                                      ####
##############################################################
##############################################################

#listar aplicativos
heroku apps

#entrar em um aplicativo
heroku git:remote -a angular-state-managements

#Atualizar
heroku update

#Execute o aplicativo localmente
heroku local web

#subir projeto
git push heroku master

#Iniciar um console, Não se esqueça de digitar exit para sair do shell e encerrar o dinamômetro.
heroku run bash

#Visualize o aplicativo em execução 
heroku logs --tail
OU
heroku logs --tail --app angular-state-managements

# logs de apenas um único dinamômetro e manter o canal aberto, ouvindo outros evento
heroku logs --ps web.1 --tail

#abrir api na web
heroku open

#verificar quantos dynos estão em execução
heroku ps

#versões anteriores do seu aplicativo
heroku releases
heroku releases:rollback v102
heroku releases

#Definir vars de configuração
heroku config:set TIMES=2
heroku config:set NPM_CONFIG_PRODUCTION=false
heroku config:set NODE_MODULES_CACHE=false
heroku config

----------CRIAR APP
mkdir redis
cd redis/
heroku login
heroku addons:create heroku-redis:hobby-dev -a redis-app-db
git init
heroku git:remote -a redis-app-db
---------FIM


----------INICIAR UM DESENVOLVIMENTO
brew install heroku/brew/heroku

heroku login

git clone https://github.com/heroku/node-js-getting-started.git
cd node-js-getting-started

heroku create nestjs-saulo
RESPONSE: https://nestjs-saulo.herokuapp.com/ | https://git.heroku.com/nestjs-saulo.git
---------FIM

-----------TUTORIAL DE CLICO DE DESENVOLVIMENTO
    #adicionando uma dependência
    npm install cool-ascii-faces

    #Agora teste localmente
    npm install
    heroku local

    #adicione os arquivos modificados ao repositório git local
    git add .

    #Agora confirme as alterações no repositório:
    git commit -m "Add cool face API"

    #Agora implante
    git push heroku main

    #Por fim, verifique se tudo está funcionando
    heroku open cool
---------FIM

-----------DATA BASE
    #Adicione o banco de dados
    heroku addons:create heroku-postgresql:hobby-dev

    #ver as variável de ambiente
    heroku config

    #comando para se conectar ao banco de dados remoto
    heroku pg:psql
-----------FIM

---------ESCALAR APLICAÇÃO
#dynos disponível para atender às solicitações
heroku ps:scale web=0
heroku ps:scale web=1
-----------FIM

----------"Couldn't find that app." 
    heroku apps
    heroku git:remote -a YOUR_APP
    RESPONSE:set git remote heroku to https://git.heroku.com/nestjs-setup.git
-----------FIM

heroku  git@heroku.com:redis-app-db.git
